{"ast":null,"code":"var _jsxFileName = \"A:\\\\GITHUB\\\\Projects\\\\movie-app\\\\frontend\\\\src\\\\pages\\\\Movies\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { Header, Footer, Drawer } from \"../../components/HomePage\";\nimport { MovieGridView } from \"../../components/MoviesPage\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movies = props => {\n  _s();\n\n  const {\n    filter\n  } = props.location.state;\n  const [movieList, setMovieList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (filter === \"goat\") {\n      fetch(\"/goats\").then(response => response.json()).then(({\n        results\n      }) => {\n        setMovieList(results);\n      });\n      setLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"movie-page-container\",\n        children: /*#__PURE__*/_jsxDEV(MovieGridView, {\n          movieList: movieList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : \"f\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"T35L/F+JR3UJ48ZK9VEVPqegoS4=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["A:/GITHUB/Projects/movie-app/frontend/src/pages/Movies/index.js"],"names":["React","useEffect","useState","Header","Footer","Drawer","MovieGridView","Movies","props","filter","location","state","movieList","setMovieList","loading","setLoading","fetch","then","response","json","results"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,QAAuC,2BAAvC;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAO,cAAP;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAK,CAACE,QAAN,CAAeC,KAAlC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,MAAM,KAAK,MAAf,EAAuB;AACrBO,MAAAA,KAAK,CAAC,QAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQ,CAAC;AAAEG,QAAAA;AAAF,OAAD,KAAiB;AACrBP,QAAAA,YAAY,CAACO,OAAD,CAAZ;AACD,OAJH;AAMAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAA,cACGD,OAAO,gBACN;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,KAAK,EAAC,sBAAX;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,SAAS,EAAEF;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF,eAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,oBADM,GAUN;AAXJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjCD;;GAAML,M;;KAAAA,M;AAmCN,eAAeA,MAAf","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\nimport { Header, Footer, Drawer } from \"../../components/HomePage\";\r\nimport { MovieGridView } from \"../../components/MoviesPage\";\r\nimport \"./styles.css\";\r\n\r\nconst Movies = (props) => {\r\n  const { filter } = props.location.state;\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (filter === \"goat\") {\r\n      fetch(\"/goats\")\r\n        .then((response) => response.json())\r\n        .then(({ results }) => {\r\n          setMovieList(results);\r\n        });\r\n\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <>\r\n          <Header />\r\n          <Drawer />\r\n          <div class=\"movie-page-container\">\r\n            <MovieGridView movieList={movieList} />\r\n          </div>\r\n          <Footer />\r\n        </>\r\n      ) : (\r\n        \"f\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}