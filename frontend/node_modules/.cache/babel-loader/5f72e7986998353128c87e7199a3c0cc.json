{"ast":null,"code":"var _jsxFileName = \"A:\\\\GITHUB\\\\Projects\\\\movie-app\\\\frontend\\\\src\\\\pages\\\\Movies\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { Header, Footer, Drawer } from \"../../components/HomePage\";\nimport { MovieGridView } from \"../../components/MoviesPage\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movies = props => {\n  _s();\n\n  const {\n    filter\n  } = props.history.location.state;\n  const [movieList, setMovieList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(`/${filter}`).then(response => response.json()).then(({\n      results\n    }) => {\n      setMovieList(results);\n    });\n    let id = setTimeout(setLoading(false), 2000);\n  }, [filter]);\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"movie-page-container\",\n      children: /*#__PURE__*/_jsxDEV(MovieGridView, {\n        movieList: movieList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Movies, \"T35L/F+JR3UJ48ZK9VEVPqegoS4=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["A:/GITHUB/Projects/movie-app/frontend/src/pages/Movies/index.js"],"names":["React","useEffect","useState","Header","Footer","Drawer","MovieGridView","Movies","props","filter","history","location","state","movieList","setMovieList","loading","setLoading","fetch","then","response","json","results","id","setTimeout"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,QAAuC,2BAAvC;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAO,cAAP;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAK,CAACE,OAAN,CAAcC,QAAd,CAAuBC,KAA1C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAAE,IAAGR,MAAO,EAAZ,CAAL,CACGS,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQ,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAiB;AACrBP,MAAAA,YAAY,CAACO,OAAD,CAAZ;AACD,KAJH;AAKA,QAAIC,EAAE,GAAGC,UAAU,CAACP,UAAU,CAAC,KAAD,CAAX,EAAoB,IAApB,CAAnB;AACD,GAPQ,EAON,CAACP,MAAD,CAPM,CAAT;AASA,SAAOM,OAAO,gBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADY,gBAGZ;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,KAAK,EAAC,sBAAX;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEF;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBAHF;AAYD,CA1BD;;GAAMN,M;;KAAAA,M;AA4BN,eAAeA,MAAf","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\nimport { Header, Footer, Drawer } from \"../../components/HomePage\";\r\nimport { MovieGridView } from \"../../components/MoviesPage\";\r\nimport \"./styles.css\";\r\n\r\nconst Movies = (props) => {\r\n  const { filter } = props.history.location.state;\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(`/${filter}`)\r\n      .then((response) => response.json())\r\n      .then(({ results }) => {\r\n        setMovieList(results);\r\n      });\r\n    let id = setTimeout(setLoading(false), 2000);\r\n  }, [filter]);\r\n\r\n  return loading ? (\r\n    <div> hello</div>\r\n  ) : (\r\n    <>\r\n      <Header />\r\n      <Drawer />\r\n      <div class=\"movie-page-container\">\r\n        <MovieGridView movieList={movieList} />\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}