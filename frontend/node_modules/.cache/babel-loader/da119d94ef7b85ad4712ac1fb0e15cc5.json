{"ast":null,"code":"var _jsxFileName = \"A:\\\\GITHUB\\\\Projects\\\\movie-app\\\\frontend\\\\src\\\\pages\\\\Movies\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { CircularProgress } from \"@material-ui/core\";\nimport { React, useEffect, useState } from \"react\";\nimport { MovieGridView } from \"../../components/MoviesPage\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movies = props => {\n  _s();\n\n  const {\n    filter\n  } = props.history.location.state;\n  const [movieList, setMovieList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  let type = filter;\n\n  if (type === \"comingsoon\") {\n    type = \"coming soon\";\n  } else if (type.includes(\"search/\")) {\n    type = \"search result: \" + type.substring(7);\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`/${filter}`).then(response => response.json()).then(({\n      results\n    }) => {\n      setMovieList(results);\n    });\n    let id = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => {\n      clearTimeout(id);\n    };\n  }, [filter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n      class: \"progress-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-page-container\",\n      children: /*#__PURE__*/_jsxDEV(MovieGridView, {\n        movieList: movieList,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Movies, \"T35L/F+JR3UJ48ZK9VEVPqegoS4=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["A:/GITHUB/Projects/movie-app/frontend/src/pages/Movies/index.js"],"names":["CircularProgress","React","useEffect","useState","MovieGridView","Movies","props","filter","history","location","state","movieList","setMovieList","loading","setLoading","type","includes","substring","fetch","then","response","json","results","id","setTimeout","clearTimeout"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,mBAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAO,cAAP;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAK,CAACE,OAAN,CAAcC,QAAd,CAAuBC,KAA1C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AAEA,MAAIY,IAAI,GAAGR,MAAX;;AACA,MAAIQ,IAAI,KAAK,YAAb,EAA2B;AACzBA,IAAAA,IAAI,GAAG,aAAP;AACD,GAFD,MAEO,IAAIA,IAAI,CAACC,QAAL,CAAc,SAAd,CAAJ,EAA8B;AACnCD,IAAAA,IAAI,GAAG,oBAAoBA,IAAI,CAACE,SAAL,CAAe,CAAf,CAA3B;AACD;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,IAAAA,KAAK,CAAE,IAAGX,MAAO,EAAZ,CAAL,CACGY,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQ,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAiB;AACrBV,MAAAA,YAAY,CAACU,OAAD,CAAZ;AACD,KAJH;AAKA,QAAIC,EAAE,GAAGC,UAAU,CAAC,MAAM;AACxBV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFkB,EAEhB,IAFgB,CAAnB;AAGA,WAAO,MAAM;AACXW,MAAAA,YAAY,CAACF,EAAD,CAAZ;AACD,KAFD;AAGD,GAbQ,EAaN,CAAChB,MAAD,CAbM,CAAT;AAeA,sBACE;AAAA,cACGM,OAAO,gBACN,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEF,SAA1B;AAAqC,QAAA,IAAI,EAAEI;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADF;AAWD,CAtCD;;GAAMV,M;;KAAAA,M;AAwCN,eAAeA,MAAf","sourcesContent":["import { CircularProgress } from \"@material-ui/core\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { MovieGridView } from \"../../components/MoviesPage\";\r\nimport \"./styles.css\";\r\n\r\nconst Movies = (props) => {\r\n  const { filter } = props.history.location.state;\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  let type = filter;\r\n  if (type === \"comingsoon\") {\r\n    type = \"coming soon\";\r\n  } else if (type.includes(\"search/\")) {\r\n    type = \"search result: \" + type.substring(7);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(`/${filter}`)\r\n      .then((response) => response.json())\r\n      .then(({ results }) => {\r\n        setMovieList(results);\r\n      });\r\n    let id = setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n    return () => {\r\n      clearTimeout(id);\r\n    };\r\n  }, [filter]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <CircularProgress class=\"progress-icon\" />\r\n      ) : (\r\n        <div className=\"movie-page-container\">\r\n          <MovieGridView movieList={movieList} type={type} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}